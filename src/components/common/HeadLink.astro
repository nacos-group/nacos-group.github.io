---
import type { HTMLAttributes } from "astro/types";

interface Props {
    href: string;
    class?: string;
    depth?: number | string;
    [key: string]: any;
}

const { href, class: className, depth, ...props } = Astro.props;

const currentPageUrl = Astro.request.url;

let diffDomain = false;

// 防止无效href导致抛错
try {
    diffDomain = new URL(href).hostname !== new URL(currentPageUrl).hostname;
} catch (e) {}

const target = diffDomain ? "_blank" : "_self";
---

<span class="header-link-wrapper">
    <a
        class={`header-link depth-${depth} ${className}`}
        href={href}
        target={target}
        {...props}
    >
        <slot />
    </a>
</span>
<style is:global>
    .header-link-wrapper {
        .header-link {
            font-size: 1em;
            transition:
                border-inline-start-color 100ms ease-out,
                background-color 200ms ease-out;
        }

        @media (min-width: 50em) {
            a.header-link {
                padding-top: 0.275rem;
                padding-bottom: 0.275rem;
            }
        }

        .header-link:hover,
        .header-link:focus,
        .header-link:focus-within {
            border-inline-start-color: var(--theme-accent-secondary);
        }

        a.header-link:hover,
        a.header-link:focus {
            color: var(--theme-text);
            text-decoration: underline;
        }
        .header-link svg {
            opacity: 0.6;
        }
        .header-link:hover svg {
            opacity: 0.8;
        }

        /* Add line and padding on the left side */
        .header-link {
            padding-inline-start: 1rem;
        }
        .header-link.depth-3 {
            padding-inline-start: 2rem;
        }
        .header-link.depth-4 {
            padding-inline-start: 3rem;
        }

        /* Apply different TOC styling for wide viewports showing the right sidebar */
        @media (min-width: 72em) {
            h2.heading {
                padding-inline-start: calc(1rem + 4px);
            }
        }

        /* Highlight TOC header link matching the current scroll position */
        a.current-header-link {
            background-color: var(--theme-bg-accent);
            /* Indicates the current heading for forced colors users in older browsers */
            outline: 1px solid transparent;
        }

        @media (forced-colors: active) {
            a.current-header-link {
                border: 1px solid CanvasText;
            }
        }

        a.current-header-link {
            color: var(--theme-text);
        }
    }
</style>
