{
  "filename": "trace-plugin.md",
  "__html": "<h1>轨迹追踪插件</h1>\n<p>Nacos从2.2.0版本开始，可通过<a href=\"https://docs.oracle.com/javase/tutorial/sound/SPI-intro.html\">SPI</a>机制注入轨迹追踪实现插件，在插件中订阅并处理追踪事件，并按照您期望的方式进行处理（如打日志，写入存储等）。本文档详细介绍一个轨迹追踪插件如何实现以及如何使其生效。</p>\n<blockquote>\n<p>注意:\n目前轨迹追踪插件处于Beta测试阶段,其API及接口方法定义可能会在后续版本升级而有较大修改，请注意您的插件适用版本。</p>\n<p>Nacos 的轨迹追踪不同于一般意义的链路追踪， 主要目的是追踪和记录一些Nacos的相关操作，如服务注册、注销、推送、状态变更等，并非追踪微服务间的相互访问链路，如需要监控追踪服务间的相互访问，请使用对应的链路追踪项目。</p>\n</blockquote>\n<h2>轨迹追踪插件中的概念</h2>\n<h3>追踪事件 TraceEvent</h3>\n<p>Nacos 在关键操作的链路中进行了埋点，定义了一系列的追踪事件<code>TraceEvent</code>， 将多个针对相同资源（如服务，配置等）的追踪事件串起来之后，便得到了该资源的轨迹。</p>\n<p>在追踪事件<code>TraceEvent</code>中，会包含如下内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>事件的类型，由具体事件定义</td>\n</tr>\n<tr>\n<td>eventTime</td>\n<td>事件发生的时间</td>\n</tr>\n<tr>\n<td>namespaceId</td>\n<td>事件对应资源的命名空间ID</td>\n</tr>\n<tr>\n<td>group</td>\n<td>事件对应资源的分组名</td>\n</tr>\n<tr>\n<td>name</td>\n<td>事件对应资源的资源名，如服务名或配置的dataId</td>\n</tr>\n</tbody>\n</table>\n<p>目前Nacos中已经定义的子追踪事件类型有：</p>\n<table>\n<thead>\n<tr>\n<th>事件名</th>\n<th>描述</th>\n<th>详情</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>RegisterInstanceTraceEvent</td>\n<td>服务实例注册事件，主要发生于注册服务提供者时</td>\n<td><a href=\"#1.1\">事件详情</a></td>\n</tr>\n<tr>\n<td>DeregisterInstanceTraceEvent</td>\n<td>服务实例注销事件，主要发生于注销服务提供者时</td>\n<td><a href=\"#1.2\">事件详情</a></td>\n</tr>\n<tr>\n<td>RegisterServiceTraceEvent</td>\n<td>服务注册事件，不同于<code>服务实例注册事件</code>，主要发生于创建空服务时</td>\n<td><a href=\"#1.3\">事件详情</a></td>\n</tr>\n<tr>\n<td>DeregisterServiceTraceEvent</td>\n<td>服务注销事件，不同于<code>服务实例注销事件</code>，主要发生于删除空服务时</td>\n<td><a href=\"#1.4\">事件详情</a></td>\n</tr>\n<tr>\n<td>SubscribeServiceTraceEvent</td>\n<td>服务订阅事件，主要发生于订阅服务时</td>\n<td><a href=\"#1.5\">事件详情</a></td>\n</tr>\n<tr>\n<td>UnsubscribeServiceTraceEvent</td>\n<td>取消服务订阅事件，主要发生于取消订阅服务时</td>\n<td><a href=\"#1.6\">事件详情</a></td>\n</tr>\n<tr>\n<td>PushServiceTraceEvent</td>\n<td>服务推送事件，主要发生于发生服务推送时</td>\n<td><a href=\"#1.7\">事件详情</a></td>\n</tr>\n<tr>\n<td>HealthStateChangeTraceEvent</td>\n<td>服务实例健康状态变更事件，主要发生于实例因心跳/健康检查而导致实例健康状态变化时</td>\n<td><a href=\"#1.8\">事件详情</a></td>\n</tr>\n</tbody>\n</table>\n<h2>插件开发</h2>\n<p>开发Nacos服务端鉴权插件，首先需要依赖轨迹追踪插件的相关API</p>\n<pre><code class=\"language-xml\">        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.nacos<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>nacos-trace-plugin<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>${project.version}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p><code>${project.version}</code> 为您开发插件所对应的Nacos版本</p>\n<p>随后实现<code>com.alibaba.nacos.plugin.trace.spi.NacosTraceSubscriber</code>接口， 并将您的实现添加到SPI的services当中。</p>\n<p>接口中需要实现的方法如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>入参内容</th>\n<th>返回内容</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getName</td>\n<td>void</td>\n<td>String</td>\n<td>插件的名称，当名字相同时，后加载的插件会覆盖先加载的插件。</td>\n</tr>\n<tr>\n<td>subscribeTypes</td>\n<td>void</td>\n<td>List&lt;Class&lt;? extends TraceEvent&gt;&gt;</td>\n<td>该插件期望订阅的事件类型，返回空列表是不订阅。</td>\n</tr>\n<tr>\n<td>onEvent</td>\n<td>TraceEvent</td>\n<td>void</td>\n<td>处理事件的具体逻辑，输入的具体事件类型由<code>subscribeTypes</code>接口定义</td>\n</tr>\n<tr>\n<td>executor</td>\n<td>void</td>\n<td>Executor</td>\n<td>当返回不为<code>null</code>时，将使用该Executor进行<code>onEvent</code>调用，否则将使用事件分发线程进行调用</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意:\n建议插件实现时使用独立Executor，如插件实现中有存在阻塞的IO操作，当存在IO异常时将阻塞其他事件的onEvent调用，导致积压问题。</p>\n</blockquote>\n<p>在<a href=\"https://github.com/nacos-group/nacos-plugin\">nacos-group/nacos-plugin</a>中，有一个demo的轨迹追踪插件实现，该demo插件订阅了注册及注销实例的事件，并打印到日志中。</p>\n<h2>轨迹追踪插件的降级</h2>\n<p>由于轨迹追踪插件增强监控类别的插件，不会对Nacos的数据造成影响，因此当轨迹追踪插件出现问题时，因尽量不影响Nacos主要链路。</p>\n<p>因此建议插件实现时使用独立Executor，如插件实现中有存在阻塞的IO操作，当存在IO异常时将阻塞其他事件的onEvent调用，导致积压问题。</p>\n<p>如果不幸发生积压，轨迹追踪插件的事件队列达到上限时，会自动丢弃后来的事件，以保证系统整体稳定性。</p>\n<p>发生丢弃时能从<code>nacos.log</code>中看到<code>Trace Event Publish failed, event : {}, publish queue size : {}</code>字样。</p>\n<h2>附录：子追踪事件详情</h2>\n<h3 id=\"1.1\">服务实例注册事件 RegisterInstanceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>REGISTER_INSTANCE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientIp</td>\n<td>注册服务实例请求的来源IP，可能为null</td>\n</tr>\n<tr>\n<td>rpc</td>\n<td>来源是否为gRPC，<code>true</code>时为gRPC注册，<code>false</code>时为HTTP注册</td>\n</tr>\n<tr>\n<td>instanceIp</td>\n<td>所注册实例的地址IP/HOST</td>\n</tr>\n<tr>\n<td>instancePort</td>\n<td>所注册实例的端口PORT</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1.2\">服务实例注销事件 DeregisterInstanceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>DEREGISTER_INSTANCE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientIp</td>\n<td>注销服务实例请求的来源IP，可能为null</td>\n</tr>\n<tr>\n<td>reason</td>\n<td>注销服务实例的原因，详情见<a href=\"#1.2.1\">服务实例注销原因</a></td>\n</tr>\n<tr>\n<td>rpc</td>\n<td>来源是否为gRPC，<code>true</code>时为gRPC注册，<code>false</code>时为HTTP注册</td>\n</tr>\n<tr>\n<td>instanceIp</td>\n<td>所注销实例的地址IP/HOST</td>\n</tr>\n<tr>\n<td>instancePort</td>\n<td>所注销实例的端口PORT</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"1.2.1\"> 服务实例注销原因 DeregisterInstanceReason </h4>\n<table>\n<thead>\n<tr>\n<th>原因</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>REQUEST</td>\n<td>注销来自于客户端请求，即由用户发起的注销</td>\n</tr>\n<tr>\n<td>NATIVE_DISCONNECTED</td>\n<td>注销来自于客户端链接断开</td>\n</tr>\n<tr>\n<td>SYNCED_DISCONNECTED</td>\n<td>注销来自于客户端链接断开，但该客户端链接是与集群其他的节点，断开后同步到本节点的</td>\n</tr>\n<tr>\n<td>HEARTBEAT_EXPIRE</td>\n<td>注销来自于客户端心跳请求超时，适用于1.X版本的客户端</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1.3\">服务注册事件 RegisterServiceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>REGISTER_SERVICE_TRACE_EVENT</code></p>\n<p>额外内容：无</p>\n<h3 id=\"1.4\">服务注销事件 DeregisterServiceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>DEREGISTER_SERVICE_TRACE_EVENT</code></p>\n<p>额外内容：无</p>\n<h3 id=\"1.5\">服务订阅事件 SubscribeServiceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>SUBSCRIBE_SERVICE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientIp</td>\n<td>订阅者IP</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1.6\">取消服务订阅事件 UnsubscribeServiceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>UNSUBSCRIBE_SERVICE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientIp</td>\n<td>订阅者IP</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1.7\">服务推送事件 PushServiceTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>PUSH_SERVICE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>clientIp</td>\n<td>订阅者IP</td>\n</tr>\n<tr>\n<td>instanceSize</td>\n<td>本次推送的提供者数量</td>\n</tr>\n<tr>\n<td>pushCostTimeForAll</td>\n<td>本次推送总耗时，定义为开始发起推送到推送结束时的耗时，包含了在聚合队列中的等待时间以及执行推送的时间</td>\n</tr>\n<tr>\n<td>pushCostTimeForNetWork</td>\n<td>本次推送的网络耗时，定义为执行推送到推送结束的耗时，仅包含了网络耗时</td>\n</tr>\n<tr>\n<td>serviceLevelAgreementTime</td>\n<td>本次推送的实际生效耗时，定义为服务变更到推送结束时的耗时，粗略值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1.8\">服务实例健康状态变更事件 HealthStateChangeTraceEvent</h3>\n<blockquote>\n<p>2.2.0版本开始支持。</p>\n</blockquote>\n<p>type: <code>HEALTH_STATE_CHANGE_TRACE_EVENT</code></p>\n<p>额外内容：</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>instanceIp</td>\n<td>实例的地址IP/HOST</td>\n</tr>\n<tr>\n<td>instancePort</td>\n<td>实例的端口PORT</td>\n</tr>\n<tr>\n<td>isHealthy</td>\n<td>变更结果是否为健康</td>\n</tr>\n<tr>\n<td>healthCheckType</td>\n<td>健康检查的类型</td>\n</tr>\n<tr>\n<td>healthStateChangeReason</td>\n<td>健康状态发生的原因</td>\n</tr>\n</tbody>\n</table>\n",
  "link": "/zh-cn/docs/v2/plugin/trace-plugin.html",
  "meta": {
    "title": "轨迹追踪",
    "keywords": "轨迹追踪,推送轨迹,变更轨迹",
    "description": "Nacos 支持轨迹追踪插件，可自定义扩展制作推送轨迹等功能，帮助运维人员快速定位问题。"
  }
}