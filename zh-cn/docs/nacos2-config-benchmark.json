{
  "filename": "nacos2-config-benchmark.md",
  "__html": "<h1>Nacos 2.0.0-ALPHA2 配置性能测试报告</h1>\n<h2>测试目的</h2>\n<ol>\n<li>长链接各项业务指标的最高值</li>\n<li>长链接相比短链接的差异数据对比</li>\n</ol>\n<h2>测试工具</h2>\n<p>我们使用自研的PAS性能评估服务平台进行压测，其原理是基于利用JMeter引擎，使用PAS自动生成的JMeter脚本，进行智能压测。</p>\n<p><img src=\"https://img.alicdn.com/tfs/TB1xCfDDpzqK1RjSZFvXXcB7VXa-692-297.png\" alt=\"Pas图\"></p>\n<h2>测试环境</h2>\n<h3>1.环境</h3>\n<table>\n<thead>\n<tr>\n<th><strong>指标</strong></th>\n<th><strong>参数</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>机器</td>\n<td>CPU 8核，内存16G</td>\n</tr>\n<tr>\n<td>集群规模</td>\n<td>单机</td>\n</tr>\n<tr>\n<td>Nacos版本</td>\n<td>Nacos 2.0.0-ALPHA2， Nacos 1.4.0</td>\n</tr>\n<tr>\n<td>数据库</td>\n<td>32C128G</td>\n</tr>\n</tbody>\n</table>\n<p>2.设置启动参数</p>\n<p>因为grpc使用的直接内存，堆内存相对使用较少，所以jvm参数有所调整</p>\n<h4>Nacos2.0 gRPC</h4>\n<pre><code>JAVA_OPT=&quot;${JAVA_OPT} -server -Xms9216m -Xmx9216m  -XX:MaxDirectMemorySize=4096m -XX:NewSize=4096m  -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics   -DisPushContent=false -XX:MaxNewSize=4096m -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/admin/nacos/logs/java_heapdump.hprof -XX:-UseLargePages -Xloggc:/home/admin/nacos/logs/nacos_gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M -DQUERYTIMEOUT=90  -XX:SurvivorRatio=10 -XX:+UseConcMarkSweepGC -XX:+UseCMSCompactAtFullCollection -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/admin/nacos/logs -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:CMSMaxAbortablePrecleanTime=5000 -XX:CMSInitiatingOccupancyFraction=74 -XX:+UseCMSInitiatingOccupancyOnly -XX:ParallelGCThreads=8 -Dnacos.core.auth.enabled=false &quot;\n</code></pre>\n<h4>Nacos1.X HTTP</h4>\n<pre><code>-server -Xms12880m -Xmx12880m -XX:MaxDirectMemorySize=1024m -XX:NewSize=1024m -XX:+UnlockDiagnosticVMOptions -XX:+PrintNMTStatistics -DisPushContent=false -XX:MaxNewSize=4096m -XX:MetaspaceSize=512m -XX:MaxMetaspaceSize=512m -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/admin/nacos/logs/java_heapdump.hprof -XX:-UseLargePages -Xloggc:/home/admin/nacos/logs/nacos_gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M -DQUERYTIMEOUT=90 -XX:SurvivorRatio=10 -XX:+UseConcMarkSweepGC -XX:+UseCMSCompactAtFullCollection -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/admin/nacos/logs -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:CMSMaxAbortablePrecleanTime=5000 -XX:CMSInitiatingOccupancyFraction=74 -XX:+UseCMSInitiatingOccupancyOnly -XX:ParallelGCThreads=8 -Dnacos.core.auth.enabled=false -Dnacos.member.list= -Djava.ext.dirs=/opt/taobao/java/jre/lib/ext:/opt/taobao/java/lib/ext -Xloggc:/home/admin/nacos/logs/nacos_gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M\n</code></pre>\n<h2>测试场景</h2>\n<p>以下测试场景都是服务配置重要接口：</p>\n<ul>\n<li>验证Nacos服务发布配置的能力</li>\n<li>验证Nacos服务获取配置的能力</li>\n<li>验证Nacos服务监听配置的能力</li>\n<li>验证Nacos服务长连接容量能力</li>\n</ul>\n<p>测试方式均是在相同的环境下，使用相同的压力进行测试，分别比对Nacos2.X版本和Nacos1.X版本的性能差异。</p>\n<h2>测试数据</h2>\n<h3>1. 发布配置</h3>\n<h4>Nacos2.0</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>500</th>\n<th>1000</th>\n<th>1200</th>\n<th>1500</th>\n<th>2000</th>\n<th>2500</th>\n<th>3000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avg rt(ms)</td>\n<td>7</td>\n<td>8</td>\n<td>12</td>\n<td>9</td>\n<td>9</td>\n<td>10.89</td>\n<td>1044</td>\n</tr>\n<tr>\n<td>80% rt(ms)</td>\n<td>7.9</td>\n<td>8</td>\n<td>11</td>\n<td>9</td>\n<td>9</td>\n<td>10.69</td>\n<td>1581</td>\n</tr>\n<tr>\n<td>95% rt(ms)</td>\n<td>8.7</td>\n<td>11</td>\n<td>25</td>\n<td>15</td>\n<td>14</td>\n<td>24.74</td>\n<td>2966</td>\n</tr>\n<tr>\n<td>cpu</td>\n<td>12</td>\n<td>22</td>\n<td>28</td>\n<td>36</td>\n<td>47</td>\n<td>55</td>\n<td>62</td>\n</tr>\n<tr>\n<td>load</td>\n<td>0.5</td>\n<td>1.5</td>\n<td>1.5</td>\n<td>1.5</td>\n<td>3.5</td>\n<td>4</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n<h4>Nacos1.X</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>500</th>\n<th>1000</th>\n<th>1200</th>\n<th>1400</th>\n<th>2000</th>\n<th>2500</th>\n<th>3000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avg rt(ms)</td>\n<td>9</td>\n<td>8.67</td>\n<td>8</td>\n<td>9</td>\n<td>10</td>\n<td>11.88</td>\n<td>1038</td>\n</tr>\n<tr>\n<td>80% rt(ms)</td>\n<td>9</td>\n<td>9.4</td>\n<td>10</td>\n<td>9</td>\n<td>10</td>\n<td>12.48</td>\n<td>1090</td>\n</tr>\n<tr>\n<td>95% rt(ms)</td>\n<td>11</td>\n<td>11.4</td>\n<td>12</td>\n<td>14</td>\n<td>18</td>\n<td>25.7</td>\n<td>1170</td>\n</tr>\n<tr>\n<td>cpu</td>\n<td>14</td>\n<td>25</td>\n<td>30</td>\n<td>35</td>\n<td>50</td>\n<td>60</td>\n<td>65</td>\n</tr>\n<tr>\n<td>load</td>\n<td>0.9</td>\n<td>1.4</td>\n<td>2</td>\n<td>2.5</td>\n<td>3</td>\n<td>2.5</td>\n<td>3.7</td>\n</tr>\n</tbody>\n</table>\n<h4>结果分析</h4>\n<p>发布配置两者差别不大,TPS 在2500tps左右出现拐点,http和长链接通道的cpu消耗分布类似。长链接对发布配置提升不大。</p>\n<h3>2. 获取配置</h3>\n<p>随机获取200个 5K大小配置</p>\n<h4>Nacos2.0</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>2000</th>\n<th>4000</th>\n<th>6000</th>\n<th>8000</th>\n<th>10000</th>\n<th>14000</th>\n<th>18000（实际15000）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avg rt(ms)</td>\n<td>3.3</td>\n<td>4</td>\n<td>3.5</td>\n<td>5</td>\n<td>7</td>\n<td>26</td>\n<td>133</td>\n</tr>\n<tr>\n<td>80% rt(ms)</td>\n<td>2.2</td>\n<td>2.2</td>\n<td>2.5</td>\n<td>2.5</td>\n<td>4</td>\n<td>41</td>\n<td>174</td>\n</tr>\n<tr>\n<td>95% rt(ms)</td>\n<td>3.3</td>\n<td>4.8</td>\n<td>5.4</td>\n<td>24</td>\n<td>38</td>\n<td>93</td>\n<td>238</td>\n</tr>\n<tr>\n<td>cpu</td>\n<td>12</td>\n<td>25</td>\n<td>37</td>\n<td>48</td>\n<td>65</td>\n<td>83</td>\n<td>85</td>\n</tr>\n<tr>\n<td>load</td>\n<td>1.2</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>20</td>\n<td>36</td>\n</tr>\n</tbody>\n</table>\n<h4>Nacos1.X</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>2000</th>\n<th>4000</th>\n<th>6000</th>\n<th>8000</th>\n<th>10000</th>\n<th>14000(实际11000)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avg rt(ms)</td>\n<td>3</td>\n<td>7.4</td>\n<td>12</td>\n<td>22</td>\n<td>46</td>\n<td>176</td>\n</tr>\n<tr>\n<td>80% rt(ms)</td>\n<td>1.8</td>\n<td>2</td>\n<td>4</td>\n<td>7</td>\n<td>35</td>\n<td>185</td>\n</tr>\n<tr>\n<td>95% rt(ms)</td>\n<td>4.4</td>\n<td>6</td>\n<td>15</td>\n<td>33</td>\n<td>118</td>\n<td>380</td>\n</tr>\n<tr>\n<td>cpu</td>\n<td>15</td>\n<td>30</td>\n<td>40</td>\n<td>52</td>\n<td>60</td>\n<td>70</td>\n</tr>\n<tr>\n<td>load</td>\n<td>1.1</td>\n<td>2.2</td>\n<td>2.5</td>\n<td>4</td>\n<td>5.5</td>\n<td>9</td>\n</tr>\n</tbody>\n</table>\n<h4>结果分析</h4>\n<p>长链接支撑的读QPS提升50%，CPU消耗降低50%，http的CPU消耗50%在于请求地址解析</p>\n<h3>3. 监听配置</h3>\n<p>两者均为单链接监听200配置。</p>\n<h4>Nacos2.0</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>1500</th>\n<th>3000</th>\n<th>6000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cpu</td>\n<td>30</td>\n<td>30</td>\n<td>60</td>\n</tr>\n<tr>\n<td>ygc</td>\n<td>0</td>\n<td>3.75s/次，7次 0.5秒</td>\n<td>3s/次，10次 1.4秒</td>\n</tr>\n<tr>\n<td>cmsgc</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>load</td>\n<td>6</td>\n<td>14</td>\n<td>20</td>\n</tr>\n</tbody>\n</table>\n<h4>Nacos1.X</h4>\n<table>\n<thead>\n<tr>\n<th>tps</th>\n<th>3000</th>\n<th>4000</th>\n<th>6000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cpu</td>\n<td>80%</td>\n<td>90%</td>\n<td>80%</td>\n</tr>\n<tr>\n<td>ygc</td>\n<td>3s一次，10次耗时0.5s</td>\n<td>2s一次，15次耗时1.5s</td>\n<td>1.5s一次，20次耗时1.3秒</td>\n</tr>\n<tr>\n<td>cmsgc</td>\n<td>3s一次，10次耗时18s</td>\n<td>4.5一次，7次耗时10s</td>\n<td>7.5s一次，4次耗时5s</td>\n</tr>\n<tr>\n<td>load</td>\n<td>6</td>\n<td>8</td>\n<td>11</td>\n</tr>\n</tbody>\n</table>\n<h4>结果分析</h4>\n<p>gRPC以1500tps持续变更推送，可以保证系统指标稳定，超过1500tps，系统内存和load持续升高，但完全没有CMS GC，CPU也维持在较低的水准。 Http 则有较高的CMS GC，GC耗时严重，CPU损耗高。</p>\n<h3>4. 长连接容量测试</h3>\n<p>两者均为单链接监听200配置。快上为同时进行大量配置发布。</p>\n<h4>Nacos2.0</h4>\n<table>\n<thead>\n<tr>\n<th>count</th>\n<th>6000</th>\n<th>8000</th>\n<th>12000</th>\n<th>15000</th>\n<th>21000</th>\n<th>31500</th>\n<th>42000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>快上时cpu</td>\n<td>40</td>\n<td>60</td>\n<td>80</td>\n<td>77</td>\n<td>79</td>\n<td>80</td>\n<td>74</td>\n</tr>\n<tr>\n<td>快上时load</td>\n<td>1.5</td>\n<td>3</td>\n<td>3.3</td>\n<td>3.6</td>\n<td>5.45</td>\n<td>5.6</td>\n<td>6.3</td>\n</tr>\n<tr>\n<td>快上耗时</td>\n<td>55s</td>\n<td>55s</td>\n<td>76</td>\n<td>100</td>\n<td>80</td>\n<td>140</td>\n<td>130</td>\n</tr>\n<tr>\n<td>稳定时cpu</td>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n<td>1.3</td>\n<td>2.8</td>\n<td>1.7</td>\n<td>2.1</td>\n</tr>\n<tr>\n<td>稳定时load</td>\n<td>0.3</td>\n<td>0.5</td>\n<td>0.5</td>\n<td>0.8</td>\n<td>0.9</td>\n<td>0.8</td>\n<td>0.8</td>\n</tr>\n<tr>\n<td>gc</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n<td>稳定后无GC消耗</td>\n</tr>\n</tbody>\n</table>\n<h4>Nacos1.X</h4>\n<table>\n<thead>\n<tr>\n<th>count</th>\n<th>6000</th>\n<th>8000</th>\n<th>12000</th>\n<th>15000</th>\n<th>21000</th>\n<th>31500</th>\n<th>42000</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>快上时cpu</td>\n<td>80</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>快上时load</td>\n<td>8</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>快上耗时</td>\n<td>100s</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>稳定时cpu</td>\n<td>60</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>稳定时load</td>\n<td>1</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>gc</td>\n<td>cmsgc频繁，4秒一次</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>结果分析</h4>\n<p>当连接量达到600时，Nacos1.X的CMS GC已经十分严重，4s一次，基本已经达到极限；反观Nacos2.0，可以继续增长，单从支撑长链接数量角度，Nacos2.0比Nacos1.X支撑7倍以上长链接。</p>\n<h2>测试结论</h2>\n<p>单项基础接口压测</p>\n<ul>\n<li>Nacos2.0读QPS 14000QPS，对比Nacos1.X QPS 8000 提升75%。</li>\n<li>Nacos2.0写TPS 2500TPS，对比Nacos1.X无明显提升。</li>\n<li>Nacos2.0支撑长链接40000以上，对比Nacos1.X提升7倍以上。</li>\n<li>Nacos2.0变更推送1500/s, 对比Nacos1.X无明显提升。</li>\n</ul>\n<p><strong>注意</strong></p>\n<ul>\n<li>本测试为对比Nacos1.X版本的测试场景，仅测试单核心接口的能力值，<strong>真实模拟场景压测</strong> 将在后续版本给出；</li>\n<li>本测试供给大家作为参考，如有不足或偏差，请指正! 如果对性能有其他需求，可以给我们提issue。</li>\n</ul>\n",
  "link": "/zh-cn/docs/nacos2-config-benchmark.html",
  "meta": {
    "title": "Nacos2.0服务配置性能测试报告",
    "keywords": "Nacos,服务,配置,性能",
    "description": "Nacos2.0服务配置性能测试报告"
  }
}