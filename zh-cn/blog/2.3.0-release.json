{
  "filename": "2.3.0-release.md",
  "__html": "<h1>Nacos 2.3.0 正式版发布、 Nacos Controller 项目开源</h1>\n<h2>新版本发布</h2>\n<p>Nacos 2.3.0-BETA版本经过1个多月的社区测试，修复了部分的问题并对部分新功能的使用进行了少量优化后，于2023年12月7日正式发布。</p>\n<p>Nacos 2.3.0版本基于<a href=\"./2.3.0-beta-release.md\">2.3.0-BETA</a> 版本为基础，主要进行了如下更新：</p>\n<ul>\n<li>基于<code>能力协商机制</code>，支持通过Grpc的方式进行持久化服务实例的注册及删除。</li>\n<li>Console UI中显示更多内容，例如部署模式等。</li>\n<li>对<code>参数校验功能</code>的实现方式进行优化。</li>\n<li>对<code>TopN</code>指标的实现进行重构，优化准确性和内存消耗。</li>\n</ul>\n<p>详细的更新日志请查看：</p>\n<pre><code class=\"language-markdown\"><span class=\"hljs-section\">## Feature</span>\n[#11393] Support register or deregister persistent instance by grpc.\n\n<span class=\"hljs-section\">## Enhancement&amp;Refactor</span>\n[#11275] Enhance console ui deploy, show more information like <span class=\"hljs-code\">`mode`</span>.\n[#11298] Strip groupNamePrefix of instance serviceName at register or deregister.\n[#11310] Simplify the validate method for serviceinfo.\n[#11342] Simplify BatchDeregister instances conditions to ip and port.\n[#11343] Simplified parameters checker control logic.\n[#11352] Refactor topN logic to enhance memory usage and accuracy.\n\n<span class=\"hljs-section\">## BugFix</span>\n[#10353] Handling DataIntegrityViolationException and DuplicateKeyException together.\n[#11299] Fix console ui auth pagination failure.\n[#11382] Fix console ui listening query pagination failure.\n[#11384] Fix console ui comparing configuration failure.\n[#11390] Fix Config EncryptionPluginService order problem.\n[#11442] Fix listen configuration check failed without namespace.\n\n<span class=\"hljs-section\">## Dependency</span>\n[#11216] Declare httpcore as direct dependency to fix avoid conflict.\n[#11396] Upgrade jackson same with spring boot dependency.\n[#11439] Upgrade some UI component to solve security problem.\n</code></pre>\n<h2>Nacos Controller 项目开源</h2>\n<p>在云原生下，应用代码与运行环境可以通过Helm或Kustomize等软件进行交付、维护、CICD，但应用的Nacos配置依然需要手工地迁移、或使用控制台修改发布配置。借助于<a href=\"https://github.com/nacos-group/nacos-controller\">Nacos Controller</a>项目，我们可以将Nacos配置管理下移到Kubernetes集群中，又或是可以将Kubernetes中ConfigMap配置上移到Nacos控制台中，从而实现统一管理能力。</p>\n<h3>Nacos配置下移到Kubernetes集群中</h3>\n<h4>工作机制</h4>\n<p>Nacos Controller监听集群内的DC资源，当DC资源发生变化时，Nacos Controller将其中的配置内容同步到Nacos Server中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660800522-5b1176a6-fec0-4846-a4a8-5b055f194dad.jpeg#averageHue=%23eaeaea&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=uc60a07bb&amp;originHeight=564&amp;originWidth=2075&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=98323&amp;status=done&amp;style=none&amp;taskId=ua3121bf8-444e-41c7-846e-febf49f0b75&amp;title=\" alt=\"controller1.jpeg\"></p>\n<h4>简易Demo</h4>\n<p>在Nacos Controller中，我们定义了一份CRD：DynamicConfiguration（简称DC），我们将Nacos配置保存在ConfigMap中，对配置的任何修改都通过DC将其中的配置同步到对应的Nacos服务端中。在后续的配置维护中，直接修改对应的ConfigMap即可。以下是一份简易的Demo示例：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">nacos.io/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DynamicConfiguration</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">dc-demo-cluster2server</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">dataIds:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">data-id1.properties</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">data-id2.yml</span>\n  <span class=\"hljs-attr\">nacosServer:</span>\n    <span class=\"hljs-attr\">endpoint:</span> <span class=\"hljs-string\">&lt;your-nacos-server-endpoint&gt;</span>\n    <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">&lt;your-nacos-namespace-id&gt;</span>\n    <span class=\"hljs-attr\">group:</span> <span class=\"hljs-string\">&lt;your-nacos-group&gt;</span>\n    <span class=\"hljs-attr\">authRef:</span>\n      <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n      <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n  <span class=\"hljs-attr\">strategy:</span>\n    <span class=\"hljs-attr\">syncPolicy:</span> <span class=\"hljs-string\">Always</span>\n    <span class=\"hljs-attr\">syncDirection:</span> <span class=\"hljs-string\">cluster2server</span>\n    <span class=\"hljs-attr\">syncDeletion:</span> <span class=\"hljs-literal\">true</span>\n  <span class=\"hljs-attr\">objectRef:</span>\n    <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n    <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-config-cm</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-config-cm</span>\n    <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">default</span>\n<span class=\"hljs-attr\">data:</span>\n    <span class=\"hljs-attr\">data-id1.properties:</span> <span class=\"hljs-string\">|\n      key=value\n      key2=value2\n</span>    <span class=\"hljs-attr\">data-id2.yml:</span> <span class=\"hljs-string\">|\n      app:\n        name: test\n</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n<span class=\"hljs-attr\">data:</span>\n    <span class=\"hljs-attr\">ak:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">ak&gt;</span>\n    <span class=\"hljs-attr\">sk:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">sk&gt;</span>\n</code></pre>\n<h3>Kubernetes配置上移到Nacos控制台</h3>\n<h4>工作机制</h4>\n<p>首先需要用户创建DC资源指定需要同步哪些DataId，Nacos Controller根据读取到的DC配置，选择性监听Nacos Server中的相关配置并将配置改动同步到Kubernetes集群中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660805211-400086de-5d56-4363-a374-8fcee802fe86.jpeg#averageHue=%23eeeeee&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=uf848a9ca&amp;originHeight=593&amp;originWidth=2048&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=78755&amp;status=done&amp;style=none&amp;taskId=udc0b426f-dbed-445f-9fbb-b17b13da1e4&amp;title=\" alt=\"controller2.jpeg\"></p>\n<h4>简易Demo</h4>\n<p>云原生下，应用除了需要加载Nacos配置外，还可能依赖一些环境变量，比如JVM参数通过环境变量注入。做得比较好的方式是通过ConfigMap等Kubernetes原生方式管理配置，通过引用的方式传递给应用Pod。在Nacos Controller中，我们可以定义一份DC，将Nacos服务端中的某些DataId同步到Kubernetes集群中的ConfigMap中，从而实现配置的统一管理。以下是一份示例Demo：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">nacos.io/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DynamicConfiguration</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">dc-demo-server2cluster</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">dataIds:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">APP1_JVM_PARAMS</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">APP2_JVM_PARAMS</span>\n  <span class=\"hljs-attr\">nacosServer:</span>\n    <span class=\"hljs-attr\">endpoint:</span> <span class=\"hljs-string\">&lt;your-nacos-server-endpoint&gt;</span>\n    <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">&lt;your-nacos-namespace-id&gt;</span>\n    <span class=\"hljs-attr\">group:</span> <span class=\"hljs-string\">&lt;your-nacos-group&gt;</span>\n    <span class=\"hljs-attr\">authRef:</span>\n      <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n      <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n  <span class=\"hljs-attr\">strategy:</span>\n    <span class=\"hljs-attr\">syncPolicy:</span> <span class=\"hljs-string\">Always</span>\n    <span class=\"hljs-attr\">syncDirection:</span> <span class=\"hljs-string\">server2cluster</span>\n    <span class=\"hljs-attr\">syncDeletion:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n<span class=\"hljs-attr\">data:</span>\n    <span class=\"hljs-attr\">ak:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">ak&gt;</span>\n    <span class=\"hljs-attr\">sk:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">sk&gt;</span>\n</code></pre>\n<h3>云原生下的配置管理最佳实践</h3>\n<p>在使用Kubernetes的场景下，一个微服务应用的配置被分割成两部份，一部分存放管理在Kubernetes集群中的Secret或ConfigMap中，另一部份存放管理与Nacos配置中心。对于运维人员，我们需要知道哪些配置是存放在何处且同时需要对两个平台的配置管理操作均有所了解，一来是增加了运维人员的知识门槛，二来是增加了应用配置运维的操作成本。通过Nacos Controller项目，我们将应用的所有配置集中于一处管理，降低应用配置运维的门槛与复杂性。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660810265-31be8807-93b2-4d7f-873c-ec262d883edc.jpeg#averageHue=%23f9f3e5&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=ua1f78c33&amp;originHeight=620&amp;originWidth=2407&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=74161&amp;status=done&amp;style=none&amp;taskId=u90c55cb3-e582-4562-92f3-537ac58daf2&amp;title=\" alt=\"controller3.jpeg\"></p>\n<h4>面向Kubernetes运维偏好的用户</h4>\n<p>通过Nacos Controller项目，我们将应用与应用配置的交付和维护集中在Kubernetes集群中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660814268-ee644f29-a68f-4906-b3b9-2e23ef8ddfbd.jpeg#averageHue=%23ece7d9&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=u71a43cf6&amp;originHeight=947&amp;originWidth=2082&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=95807&amp;status=done&amp;style=none&amp;taskId=ude3735a4-736f-4b0a-9bd5-1aa54203794&amp;title=\" alt=\"controller4.jpeg\"></p>\n<p>以下通过一份Helm应用Chart包说明如何集中管理。</p>\n<pre><code>.\n├── Chart.yaml\n├── charts\n├── conf\n│   ├── application-dev.properties\n│   ├── application.properties\n│   ├── consumer-app.properties\n│   └── provider-app.yaml\n├── templates\n│   ├── consumer.yaml\n│   ├── dc.yaml\n│   └── provider.yaml\n└── values.yaml\n</code></pre>\n<p>以上是一份Chart包目录结构，其中conf目录存放的是Nacos配置，文件名即DataId，文件内容即对应的Content。在templates/dc.yaml中，我们定义一份ConfigMap来组装这些配置。templates目录中的consumer.yaml与provider.yaml分别是应用定义。</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-config</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">{{</span> <span class=\"hljs-string\">.Release.Namespace</span> <span class=\"hljs-string\">}}</span>\n<span class=\"hljs-attr\">data:</span>\n  <span class=\"hljs-string\">{{-</span> <span class=\"hljs-string\">range</span> <span class=\"hljs-string\">$path,</span> <span class=\"hljs-string\">$_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">.Files.Glob</span> <span class=\"hljs-string\">\"conf/**\"</span> <span class=\"hljs-string\">}}</span>\n  <span class=\"hljs-string\">{{</span> <span class=\"hljs-string\">$path</span> <span class=\"hljs-string\">|</span> <span class=\"hljs-string\">base</span> <span class=\"hljs-string\">}}:</span> <span class=\"hljs-string\">|-\n{{ $.Files.Get $path | indent 4}}\n  {{- end }}\n</span></code></pre>\n<p><strong>使用上述方式定义好应用与配置后，可以借助git实现应用、配置的版本管理。当需要发布应用或配置时，修改对应文件后，执行helm upgrade命令即可。</strong></p>\n<h4>面向Nacos运维偏好的用户</h4>\n<p>Nacos配置管理能力使得应用可以动态调整运行配置，但对于一些特殊的参数，如JVM参数、特殊环境变量、特殊目录文件等内容，Nacos配置管理依然无法涵盖。在Kubernetes集群中，我们一般将环境变量或一些特殊文件配置写入ConfigMap中，通过envFrom能力将内容引用到环境变量中或者volumeMount挂载到文件系统中。这样的配置管理能力与Nacos配置管理能力是散开的，不利于统一管理。借助于Nacos Controller，我们将这些配置上移到Nacos控制台中，进行统一管理。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660827720-fbfb2d66-3c83-40c6-834b-e5d4da2ebe52.jpeg#averageHue=%23ede9df&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=u2129038b&amp;originHeight=1010&amp;originWidth=2102&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=97337&amp;status=done&amp;style=none&amp;taskId=udc37224f-2763-4022-bd6e-da94705b039&amp;title=\" alt=\"controller5.jpeg\"></p>\n<p>以下是一份Demo应用，通过Nacos控制台管理JVM启动参数</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Deployment</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">demo-app</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">replicas:</span> <span class=\"hljs-number\">1</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">demo-app</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">demo-app</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">demo-app</span>\n        <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">openjdk:8</span> <span class=\"hljs-comment\">#替换为你的应用镜像</span>\n        <span class=\"hljs-attr\">command:</span> <span class=\"hljs-string\">[\"/bin/sh\",</span> <span class=\"hljs-string\">\"-c\"</span><span class=\"hljs-string\">,</span> <span class=\"hljs-string\">\"java -jar ${JVM_PARAMS} /app.jar\"</span><span class=\"hljs-string\">]</span>\n        <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">JVM_PARAMS</span> <span class=\"hljs-comment\"># 从ConfigMap中载入JVM参数到环境变量中</span>\n          <span class=\"hljs-attr\">valueFrom:</span>\n            <span class=\"hljs-attr\">configMapKeyRef:</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-config</span>\n              <span class=\"hljs-attr\">key:</span> <span class=\"hljs-string\">APP1_JVM_PARAMS</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">nacos.io/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DynamicConfiguration</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-config</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">dataIds:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">APP1_JVM_PARAMS</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">APP2_JVM_PARAMS</span>\n  <span class=\"hljs-attr\">nacosServer:</span>\n    <span class=\"hljs-attr\">endpoint:</span> <span class=\"hljs-string\">&lt;your-nacos-server-endpoint&gt;</span>\n    <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">&lt;your-nacos-namespace-id&gt;</span>\n    <span class=\"hljs-attr\">group:</span> <span class=\"hljs-string\">&lt;your-nacos-group&gt;</span>\n    <span class=\"hljs-attr\">authRef:</span>\n      <span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n      <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n  <span class=\"hljs-attr\">strategy:</span>\n    <span class=\"hljs-attr\">syncPolicy:</span> <span class=\"hljs-string\">Always</span>\n    <span class=\"hljs-attr\">syncDirection:</span> <span class=\"hljs-string\">server2cluster</span>\n    <span class=\"hljs-attr\">syncDeletion:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n<span class=\"hljs-attr\">metadata:</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nacos-auth</span>\n<span class=\"hljs-attr\">data:</span>\n    <span class=\"hljs-attr\">ak:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">ak&gt;</span>\n    <span class=\"hljs-attr\">sk:</span> <span class=\"hljs-string\">&lt;base64</span> <span class=\"hljs-string\">sk&gt;</span>\n</code></pre>\n<p>在Nacos控制台中，修改DataId：APP1_JVM_PARAMS后，配置将自动同步到集群的ConfigMap中。只需重启相关应用，则对应的JVM参数将自动变化。<strong>成功实现将应用的所有配置集中管理在Nacos上。</strong></p>\n<h2>Nacos 社区新晋Committer</h2>\n<p>社区中新增了2位Committer <a href=\"https://github.com/karsonto\">Karsonto</a> 和 <a href=\"https://github.com/Daydreamer-ia\">Daydreamer-ia</a> 。同时，Nacos社区又迎来了一位来自开源之夏的Committer同学<a href=\"https://github.com/Daydreamer-ia\">Daydreamer-ia</a> 。</p>\n<table>\n<thead>\n<tr>\n<th><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660648199-5008e06a-d3e6-4515-9d61-656fdff44a55.jpeg#averageHue=%239ec7e8&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=uc271c8fd&amp;originHeight=1130&amp;originWidth=750&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=861513&amp;status=done&amp;style=none&amp;taskId=u9fc1bd5d-9a54-42b9-b69a-a6fb1788445&amp;title=\" alt=\"陶健敏- 人物海报.jpg\"></th>\n<th><img src=\"https://cdn.nlark.com/yuque/0/2023/jpeg/1577777/1701660652426-eecd1604-f49d-4a47-85dd-d0e87363a524.jpeg#averageHue=%23a1caea&amp;clientId=u4b259127-c8c7-4&amp;from=drop&amp;id=u99881944&amp;originHeight=1130&amp;originWidth=750&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=792044&amp;status=done&amp;style=none&amp;taskId=uba3a1ed0-79e0-455e-9648-690dc671ecb&amp;title=\" alt=\"陈亿钦-人物海报.jpg\"></th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>\n<h2>展望</h2>\n<h3>2.X 后续计划</h3>\n<p>从2021年3月 2.0.0正式版发布至今，2.X版本已经走了接近2年时间，如今2.3.0版本发布，完成了大部分功能的插件化提炼，在之后的2.3.X版本中，会主要对当前版本的问题进行修复，并做出小范围的功能优化。同时对于2.4.0版本，会作为一个Nacos3.0的过度版本，对大量代码进行优化重构，在提升稳定性、健壮性的同时，提升易用性和可观测性，向Nacos3.0版本平稳过度。</p>\n<h3>3.0 计划</h3>\n<p>Nacos社区同时也开启了关于<a href=\"https://mp.weixin.qq.com/s/8UwwD_WxSJINP8Qr_1wogg\">Nacos3.0</a> 的畅想和规划，Nacos将会从统一控制面、支持国产化、存储计算分离等方向进一步演进Nacos的功能和架构，欢迎社区积极参与到新版本的建设中。</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/1577777/1698198629123-af9f1216-f996-4ac2-81bf-436048823d21.png\" alt=\"image.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/1577777/1660125280551-a2e881fe-d25e-4ebb-a28f-8e56683deef1.png#clientId=uf10cb19a-105c-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=url&amp;id=Z9to1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=794&amp;originWidth=1650&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=185821&amp;status=done&amp;style=none&amp;taskId=u63849e10-1dae-45cb-b559-04d106ebe86&amp;title=#crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;id=rUihF&amp;originHeight=794&amp;originWidth=1650&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=\" alt=\"image.png\"></p>\n<h2>About Nacos</h2>\n<p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。</p>\n<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。</p>\n<p>最后欢迎大家扫码加入Nacos社区群</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2023/png/1577777/1679276899363-83081d59-67c6-4501-9cf8-0d84ba7c6d7e.png#averageHue=%23c1c2c2&amp;clientId=u9dfeac18-3281-4&amp;from=paste&amp;height=551&amp;id=ubcf45e51&amp;name=image.png&amp;originHeight=1102&amp;originWidth=854&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=155261&amp;status=done&amp;style=none&amp;taskId=ud6bea1fe-b003-441b-a810-84435d2aeff&amp;title=&amp;width=427\" alt=\"image.png\"></p>\n",
  "link": "/zh-cn/blog/2.3.0-release.html",
  "meta": {
    "title": "Nacos 2.3.0 正式版发布、 Nacos Controller 项目开源",
    "keywords": "2.3.0",
    "description": "Nacos 2.3.0 正式版发布、 Nacos Controller 项目开源。",
    "date": "2023-12-07"
  }
}