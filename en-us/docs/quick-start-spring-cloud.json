{
  "filename": "quick-start-spring-cloud.md",
  "__html": "<h1>Quick Start for Nacos Spring Cloud Projects</h1>\n<p>This quick start introduces how to enable Nacos configuration management and service discovery features for your Spring Cloud project.</p>\n<p>For more details about Nacos Spring Cloud: <a href=\"https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc/nacos-config.adoc\">Nacos Config</a> and <a href=\"https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/master/spring-cloud-alibaba-docs/src/main/asciidoc/nacos-discovery.adoc\">Nacos Discovery</a>.</p>\n<p>The quick start includes two samples:</p>\n<ul>\n<li>How to enable dynamic configuration updates with Nacos server and spring-cloud-starter-alibaba-nacos-config;</li>\n<li>How to enable service registration and discovery with Nacos server and spring-cloud-starter-alibaba-nacos-discovery.</li>\n</ul>\n<h2>Prerequisite</h2>\n<p>Follow instructions in <a href=\"https://nacos.io/zh-cn/docs/quick-start.html\">Nacos Quick Start</a> to download Nacos and start the Nacos server.</p>\n<h2>Enable Configuration Service</h2>\n<p>Once you start the Nacos server, you can follow the steps below to enable the Nacos configuration management service for your Spring Cloud project.</p>\n<p>Sample project: <a href=\"https://github.com/nacos-group/nacos-examples/tree/master/nacos-spring-cloud-example/nacos-spring-cloud-config-example\">nacos-spring-cloud-config-example</a></p>\n<ol>\n<li>Add the Nacos Spring Cloud dependency.</li>\n</ol>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;\n    &lt;version&gt;${latest.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p><strong>Note</strong>: Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config\">2.1.x.RELEASE</a> is compatible with the Spring Boot 2.1.x line. Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config\">2.0.x.RELEASE</a> is compatible with the Spring Boot 2.0.x line. Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-config\">1.5.x.RELEASE</a> is compatible with the Spring Boot 1.5.x line.</p>\n<ol start=\"2\">\n<li>Configure the Nacos Server address and Specify the application name in <code>bootstrap.properties</code> :</li>\n</ol>\n<pre><code>spring.cloud.nacos.config.server-addr=127.0.0.1:8848\n\nspring.application.name=example\n</code></pre>\n<p><strong>Note</strong>: The value of <code>spring.application.name</code> will be used to construct part of the dataId in Nacos configuration management.</p>\n<p>In Nacos Spring Cloud, the format of <code>dataId</code> is as follows:</p>\n<pre><code class=\"language-plain\">${prefix}-${spring.profiles.active}.${file-extension}\n</code></pre>\n<ul>\n<li>The value of <code>prefix</code> is the value of <code>spring.application.name</code> by default. You can also configure this value in <code>spring.cloud.nacos.config.prefix</code>.</li>\n<li><code>spring.profiles.active</code> is the profile of the current environment. For more details, refer to <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-profiles.html#boot-features-profiles\">Spring Boot Document</a>.\n<strong>Note: When the value of <code>spring.profiles.active</code> is empty, the corresponding hyphen <code>-</code> will be deleted, and the format of dataId becomes: <code>${prefix}.${file-extension}</code></strong></li>\n<li><code>file-exetension</code> is the data format of the configuration content, and can be configured in <code>spring.cloud.nacos.config.file-extension</code> . Currently only the <code>properties</code> and <code>yaml</code> type is supported.</li>\n</ul>\n<ol start=\"4\">\n<li>Add the native <code>@RefreshScope</code> annotation of Spring Cloud to enable autorefresh of configuration updates:</li>\n</ol>\n<pre><code>@RestController\n@RequestMapping(&quot;/config&quot;)\n@RefreshScope\npublic class ConfigController {\n\n    @Value(&quot;${useLocalCache:false}&quot;)\n    private boolean useLocalCache;\n\n    @RequestMapping(&quot;/get&quot;)\n    public boolean get() {\n        return useLocalCache;\n    }\n}\n</code></pre>\n<ol start=\"5\">\n<li>Call <a href=\"https://nacos.io/zh-cn/docs/open-api.html\">Nacos Open API</a> to publish a configuration to the Nacos server. Assume the dataId is <code>example.properties</code>，and the content is <code>useLocalCache=true</code>.</li>\n</ol>\n<pre><code>curl -X POST &quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&amp;group=DEFAULT_GROUP&amp;content=useLocalCache=true&quot;\n</code></pre>\n<ol start=\"6\">\n<li>\n<p>Run <code>NacosConfigApplication</code>and call  <code>curl http://localhost:8080/config/get</code>，You will get a returned value of <code>true</code>.</p>\n</li>\n<li>\n<p>Call <a href=\"https://nacos.io/zh-cn/docs/open-api.html\">Nacos Open API</a> again to publish an updated configuration to the Nacos server. Assume the dataId is<code>example.properties</code>，and the content is <code>useLocalCache=false</code>.</p>\n</li>\n</ol>\n<pre><code>curl -X POST &quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&amp;group=DEFAULT_GROUP&amp;content=useLocalCache=false&quot;\n</code></pre>\n<ol start=\"8\">\n<li>Access <code>http://localhost:8080/config/get</code>again and the returned value became <code>false</code>，indicating that the value of <code>useLocalCache</code>in your application has been updated.</li>\n</ol>\n<h2>Enable Service Discovery</h2>\n<p>Now you would also like to enable the service discovery feature of Nacos in your Spring Cloud project.</p>\n<p>Sample project: <a href=\"https://github.com/nacos-group/nacos-examples/tree/master/nacos-spring-cloud-example/nacos-spring-cloud-discovery-example\">nacos-spring-cloud-discovery-example</a></p>\n<ol>\n<li>Add the Nacos Spring Cloud dependency.</li>\n</ol>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;\n    &lt;version&gt;${latest.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p><strong>Note</strong>: Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery\">2.1.x.RELEASE</a> is compatible with the Spring Boot 2.1.x line. Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery\">2.0.x.RELEASE</a> is compatible with the Spring Boot 2.0.x line. Version <a href=\"https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery\">1.5.x.RELEASE</a> is compatible with the Spring Boot 1.5.x line.</p>\n<ol start=\"2\">\n<li>Configure the service provider, so that it can register its services to the Nacos server.</li>\n</ol>\n<p>i. Add the Nacos server address in <code>application.properties</code> :</p>\n<pre><code>server.port=8070\nspring.application.name=service-provider\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n</code></pre>\n<p>ii. Enable service discovery by adding the Spring Cloud native annotation of <code>@EnableDiscoveryClient</code>:</p>\n<pre><code>@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosProviderApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(NacosProviderApplication.class, args);\n\t}\n\n\t@RestController\n\tclass EchoController {\n\t\t@RequestMapping(value = &quot;/echo/{string}&quot;, method = RequestMethod.GET)\n\t\tpublic String echo(@PathVariable String string) {\n\t\t\treturn &quot;Hello Nacos Discovery &quot; + string;\n\t\t}\n\t}\n}\n</code></pre>\n<ol start=\"3\">\n<li>Configure the service consumer so that it can discover the services that it would like to call on the Nacos server.</li>\n</ol>\n<p>i. Configure the Nacos server address in <code>application.properties</code> :</p>\n<pre><code>server.port=8080\nspring.application.name=service-consumer\n\nspring.cloud.nacos.discovery.server-addr=127.0.0.1:8848\n</code></pre>\n<p>ii. Add the Spring Cloud native annotation of <code>@EnableDiscoveryClient</code>  to enable service discovery. Add the <code>@LoadBalanced</code> annotation for the <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-resttemplate.html\">RestTemplate</a> instance,  and enable the integration of <code>@LoadBalanced</code> and <a href=\"https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-ribbon.html\">Ribbon</a>:</p>\n<pre><code>@SpringBootApplication\n@EnableDiscoveryClient\npublic class NacosConsumerApplication {\n\n    @LoadBalanced\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n\n    public static void main(String[] args) {\n        SpringApplication.run(NacosConsumerApplication.class, args);\n    }\n\n    @RestController\n    public class TestController {\n\n        private final RestTemplate restTemplate;\n\n        @Autowired\n        public TestController(RestTemplate restTemplate) {this.restTemplate = restTemplate;}\n\n        @RequestMapping(value = &quot;/echo/{str}&quot;, method = RequestMethod.GET)\n        public String echo(@PathVariable String str) {\n            return restTemplate.getForObject(&quot;http://service-provider/echo/&quot; + str, String.class);\n        }\n    }\n}\n</code></pre>\n<ol start=\"4\">\n<li>Start <code>ProviderApplication</code> and <code>ConsumerApplication</code> , and call <code>http://localhost:8080/echo/2018</code>. You will get a returned message of <code>Hello Nacos Discovery 2018</code>.</li>\n</ol>\n<h2>Related Projects</h2>\n<ul>\n<li><a href=\"https://github.com/alibaba/nacos\">Nacos</a></li>\n<li><a href=\"https://github.com/nacos-group/nacos-spring-project\">Nacos Spring</a></li>\n<li><a href=\"https://github.com/nacos-group/nacos-spring-boot-project\">Nacos Spring Boot</a></li>\n<li><a href=\"https://github.com/alibaba/spring-cloud-alibaba\">Spring Cloud Alibaba</a></li>\n</ul>\n",
  "link": "/en-us/docs/quick-start-spring-cloud.html",
  "meta": {
    "title": "Quick Start for Nacos Spring Cloud Projects",
    "keywords": "Nacos,Spring Cloud",
    "description": "Quick Start for Nacos Spring Cloud Projects"
  }
}